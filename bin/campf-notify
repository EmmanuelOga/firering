#!/usr/bin/env ruby

require 'firering'
require 'shellwords'

subdomain, token = ENV["CAMPFIRE_SUBDOMAIN"], ENV["CAMPFIRE_TOKEN"]
room_name, icon_path = ARGV

if subdomain.to_s =~ /^\s*$/ || token.to_s =~ /^\s*$/ || room_name.to_s =~ /^\s*$/ || icon_path.nil? || !File.file?(icon_path)
  puts "USAGE: campf-notify room-name icon-path"
  puts
  puts "Icon path #{icon_path} is incorrect" unless icon_path && File.exists?(icon_path)
  puts "Room name #{room_name} is missing"   unless room_name =~ /\S/
  puts
  puts "The following environment variables will be used: "
  puts
  puts "CAMPFIRE_SUBDOMAIN: #{subdomain || 'missing!'}"
  puts "CAMPFIRE_TOKEN:     #{token || 'missing!'}"
  puts
  exit 1
else
  host = "http://#{subdomain}.campfirenow.com"
  puts "connecting to #{host}"
end

conn = Firering::Connection.new(host) {|c| c.token = token }

EM.run do
  conn.rooms do |rooms|
    room = rooms.detect { |r| r.name == room_name }

    unless room
      puts "Could not find that room. Found rooms:"
      rooms.each { |room| puts "  * #{room}" }
      exit 1
    end

    puts "Streaming #{room}"

    room.stream do |message|
      if message.from_user?
        message.user { |user| system("notify-send -i #{icon_path.shellescape} -t 10000 Campfire #{ "( #{user} ) #{message}".shellescape }") }
      else
        system("notify-send -i #{icon_path.shellescape} -t 10000 Campfire #{message.to_s.shellescape}") if message.to_s =~ /\S/
      end
    end
  end

  trap("INT") { EM.stop }
end
