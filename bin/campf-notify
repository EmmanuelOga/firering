#!/usr/bin/env ruby

require 'firering'
require 'shellwords'

Firering.subdomain = ENV["CAMPFIRE_SUBDOMAIN"]
Firering.token     = ENV["CAMPFIRE_TOKEN"]

room_name = ARGV[0].to_s
icon_path = ARGV[1].to_s

if Firering.subdomain =~ /^\s*$/ || Firering.token =~ /^\s*$/ || room_name =~ /^\s*$/ || !File.exists?(icon_path)
  puts "USAGE: campf-notify room-name notify-send-icon-path"
  puts
  puts "Icon path #{icon_path} is incorrect\n" unless File.exists?(icon_path)
  puts "Room name #{room_name} is missing" unless room_name !~ /^\s*$/

  puts "The following environment variables are needed: "
  puts
  puts "CAMPFIRE_SUBDOMAIN: #{Firering.subdomain}"
  puts "CAMPFIRE_TOKEN:     #{Firering.token}"
  puts
  exit
else
  puts "connecting to #{Firering.subdomain}.#{Firering::HTTP.host}"
end

EM.run do
  Firering.rooms do |rooms|
    rooms.each do |room|
      if room.name == room_name

        puts "Joining #{room.name}"

        Firering.room_join(room.id) do
          Firering.stream(room.id) do |message|

            if message.from_user?
              Firering.user(message.user_id) do |user|
                m = "( #{user.name} ) #{message.body}"
                system("notify-send -i #{icon_path.shellescape} -t 10000 Campfire #{m.shellescape}")
              end
            else
              m = message.body.to_s
              system("notify-send -i #{icon_path.shellescape} -t 10000 Campfire #{m.shellescape}") if m !~ /^\s*$/
            end

          end
        end

      end
    end
  end

  trap("INT") { EM.stop }
end
